<aside id="floating-control">
    {#
    <a  id="emailme" href="mailto:connect@utsob.me?subject=Regarding {{title}}&body=Discussing {{meta.siteBaseUrl}}{{permalink}}"><i  icon-name="mail-plus" title="Discuss" aria-hidden="true"></i></a>
    #}
    {# 对应网址花括号内填写个人网页对应后缀#}
    <span id="contact-icon">
        <a href="https://zhihu.com/people/{{change to yours}}" class="icon-2 zhihu" title="知乎"><img src="/img/知乎.svg" alt="知乎" width="30" height="30"></a>
        <a href="https://github.com/{{your user name}}" class="icon-2 zhihu" title="Github"><img src="/img/github.svg" alt="Github" width="25" height="25"></a>
        <a href="http://stackoverflow.com/users/{{change to yours}}" class="icon-2 zhihu" title="Stackoverflow"><img src="/img/stackoverflow.svg" alt="Stackoverflow" width="20" height="20"></a>
    </span>
    <span id="theme-switch">
        <i class="svg-icon light" icon-name="sun" aria-hidden="true">  </i>
        <i class="svg-icon dark" icon-name="moon" aria-hidden="true">  </i>
        <i class="svg-icon auto" icon-name="sun-moon" aria-hidden="true">  </i>
    </span>
</aside>


    
<script>
    function setThemeIcon(theme) {
        let toAdd;
        switch (theme) {
            case 'dark':
                toRemove = ['auto', 'light'];
                break;
            case 'light':
                toAdd = 'fa-adjust';
                toRemove = ['dark', 'auto'];
                break;
            default:
                toRemove = ['light', 'dark'];
                break;
        }
        document.getElementById('theme-switch').classList.add(theme);
        document.getElementById('theme-switch').classList.remove(...toRemove);
    }
    function setTheme(theme, setIcon) {
        if (setIcon) {
            setThemeIcon(theme);
        }
        if (theme == 'dark') {
            document.body.classList.remove('theme-light');
            document.body.classList.add('theme-dark');
        } else if (theme == "light") {
            document.body.classList.add('theme-light');
            document.body.classList.remove('theme-dark');
        } else {
            theme = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'light';
            setTheme(theme, false);
        }
        
    }
    let theme = window.localStorage.getItem('site-theme') || "light";
    setTheme(theme, true);
    window.theme = theme;
    window.localStorage.setItem('site-theme', theme);

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(event) {
        const settings = window.localStorage.getItem('site-theme');
        if (!settings || settings == "auto") {
            window.localStorage.setItem('site-theme', "auto");
            setTheme("auto", true);
        }
    });
    document.getElementById('theme-switch').addEventListener('click', function() {
        let theme;
        if (window.theme == 'auto') {
            theme = "dark";
        } else if (window.theme == 'dark') {
            theme = 'light'
        } else {
            theme = 'auto';
        }
        setTheme(theme, true);
        window.localStorage.setItem('site-theme', theme);
        window.theme = theme;
    })
</script>